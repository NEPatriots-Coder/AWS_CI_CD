name: 'Terraform'

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: read
  
jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      

    - name: Terraform Init
      run: |
        terraform init \
          -backend-config="bucket=CI-CD-terraform-state" \
          -backend-config="dynamodb_table=terraform-state-lock" \
          -backend-config="encrypt=true" \
          -backend-config="region=us-east-2"

    - name: Terraform Format
      run: terraform fmt -check

    - name: Terraform Plan
      run: terraform plan -input=false
      env:
        TF_VAR_bucket_name: ${{ secrets.S3_BUCKET_NAME }}

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false
      env:
        TF_VAR_bucket_name: ${{ secrets.s3_BUCKET_NAME }}

    - name: Upload Website Content
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        # Create website directory structure if it doesn't exist
        mkdir -p website/assets/pdfs
        
        # Copy HTML files to website directory
        cp index.html website/
        cp error.html website/
        
        # Sync website content to S3
        aws s3 sync website/ s3://${{ secrets.s3_BUCKET_NAME }} --delete

    - name: Invalidate CloudFront Cache
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        # Get CloudFront distribution ID from Terraform output
        DISTRIBUTION_ID=$(terraform output -raw cloudfront_distribution_id)
        
        # Create CloudFront invalidation
        aws cloudfront create-invalidation \
          --distribution-id $DISTRIBUTION_ID \
          --paths "/*"